type VideoURLs @model @auth(rules: [{allow: public}]) {
  id: ID!
  guid: String!
  srcvideo: String
  MP4: String
  CMAF: String
  HLS: String
  DASH: String
  MSS: String
}

type Video @model @auth(rules: [{allow: public}]) {
  id: ID!
  title: String!
  description: String!
  url: String!
  poster: String!
  duration: Int!
  date: AWSDateTime!
  category: Category @belongsTo
  teacher: Teacher @belongsTo
  tags: [Tag] @manyToMany(relationName: "VideoTags")
}

type Category @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String!
  description: String
  videos: [Video] @hasMany
}

type Teacher @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String!
  image: String!
  bio: String
  videos: [Video] @hasMany
}

type Tag @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String!
  video: [Video] @manyToMany(relationName: "VideoTags")
}

type UserData @model @auth(rules: [{allow: public}]) {
  id: ID
  cognitoSub: String!
  favorites: [String]
}
 